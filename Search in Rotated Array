int getpivot(vector<int>& arr,int size){
    int s=0;
    int e=size-1;
    int mid=s+(e-s)/2;
    while(s<e){
        if(arr[0]<=arr[mid]){
            s=mid+1;
        }
        else{
            e=mid;
        }
        mid=s+(e-s)/2;
    }
    return s;
}


int binarySearch(vector<int>& arr,int a,int b,int key){
    int s=a;
    int e=b;
    int mid=s+(e-s)/2;
    while(s<=e){
        if(arr[mid]==key){
            return mid;
        }
        else if(arr[mid]<key){
            s=mid+1;
        }
        else{
            e=mid-1;
        }
         mid=s+(e-s)/2;
    }
    return -1;
}


int search(vector<int>& arr, int n, int k)
{
    int pivot=getpivot(arr,n);
    if(arr[pivot]<=k&&k<=arr[n-1]){
        return binarySearch(arr,pivot,n-1,k);
    }
    else{
        return binarySearch(arr,0,pivot-1,k);
    }
}
